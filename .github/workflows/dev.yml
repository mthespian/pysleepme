# This is a basic workflow to help you get started with Actions

name: dev workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, main, cleanup ]
  pull_request:
    branches: [ master, main, cleanup ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job to create json list of python versions
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      python-matrix: ${{ steps.get-python-versions-action.outputs.latest-python-versions }}
    steps:
    - uses: snok/latest-python-versions@v1
      id: get-python-versions-action
      with:
        min-version: 3.9
        include-prereleases: true


  # main job called "test"
  test:
    # The type of runner that the job will run on
    strategy:
      matrix:
        python-versions: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}
        os: [ubuntu-18.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-versions }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry tox tox-gh-actions
          poetry install --no-interaction
      - name: Test with pytest
        run:  pip install pytest coverage pytest-cov respx &&  pytest --cov=pysleepme --cov-branch --cov-report=xml --cov-report=term-missing tests
      - name: test with tox
        run:  tox

      - name: list files
        run: ls -l .

      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          files: coverage.xml
